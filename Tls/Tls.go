// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tls

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
)

// TlsABI is the input ABI used to generate the binding from.
const TlsABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"idStr\",\"type\":\"string\"}],\"name\":\"getByidA_id\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"checker\",\"type\":\"string\"},{\"name\":\"check_time\",\"type\":\"string\"}],\"name\":\"set_factory2\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"idStr\",\"type\":\"string\"}],\"name\":\"set_id\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_factory\",\"type\":\"string\"}],\"name\":\"getByFacId_factory2\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_logistics\",\"type\":\"string\"}],\"name\":\"getByLogId_trace2\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idB\",\"type\":\"int256[]\"}],\"name\":\"getByIdB_factory2\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_logistics\",\"type\":\"string\"}],\"name\":\"getByLogId_trace1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idB\",\"type\":\"int256[]\"}],\"name\":\"getByIdB_factory1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_factory\",\"type\":\"string\"}],\"name\":\"getByFacId_trace1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idD\",\"type\":\"int256\"}],\"name\":\"getSales\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_sales\",\"type\":\"string\"}],\"name\":\"getBySaleId_trace4\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_factory\",\"type\":\"string\"}],\"name\":\"getByFacId_factory1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEmpty_pasture\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idC_list\",\"type\":\"int256[]\"}],\"name\":\"getByIdC_logistics\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256[]\"}],\"name\":\"getByIdA_pasture\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tableFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEmpty_logistics\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idB\",\"type\":\"int256[]\"}],\"name\":\"getByIdB_factory3\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_sales\",\"type\":\"string\"}],\"name\":\"getBySaleid_sales\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_sales\",\"type\":\"string\"}],\"name\":\"getBySaleId_trace1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idB\",\"type\":\"int256\"}],\"name\":\"getFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"batch_sale\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"int256\"},{\"name\":\"sales_time\",\"type\":\"string\"},{\"name\":\"id_sales\",\"type\":\"string\"}],\"name\":\"set_sales\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idB\",\"type\":\"int256\"}],\"name\":\"getByidB_idA\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_logistics\",\"type\":\"string\"}],\"name\":\"getByLogid_logistics\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"batch_raw\",\"type\":\"string\"},{\"name\":\"weight_raw\",\"type\":\"int256\"},{\"name\":\"date_raw\",\"type\":\"string\"},{\"name\":\"id_pasture\",\"type\":\"string\"}],\"name\":\"set_pasture\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_sales\",\"type\":\"string\"}],\"name\":\"getBySaleId_trace2\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_factory\",\"type\":\"string\"}],\"name\":\"getByFacId_trace2\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_factory\",\"type\":\"string\"}],\"name\":\"getByFacId_factory3\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEmpty_factory\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"_idD\",\"type\":\"int256\"}],\"name\":\"setIdDTrace\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_pasture\",\"type\":\"string\"}],\"name\":\"getByPasId_pasture\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"int256[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"batch_log\",\"type\":\"string\"},{\"name\":\"trans_name\",\"type\":\"string\"},{\"name\":\"id_logistics\",\"type\":\"string\"}],\"name\":\"set_logistics\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idStr\",\"type\":\"string\"}],\"name\":\"get_id\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"batch_pro\",\"type\":\"string\"},{\"name\":\"product_name\",\"type\":\"string\"},{\"name\":\"composition\",\"type\":\"string\"}],\"name\":\"set_factory1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idC\",\"type\":\"int256\"}],\"name\":\"getLogistics\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_sales\",\"type\":\"string\"}],\"name\":\"getBySaleId_trace3\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id_logistics\",\"type\":\"string\"}],\"name\":\"getByLogId_trace3\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"},{\"name\":\"processer\",\"type\":\"string\"},{\"name\":\"process_time\",\"type\":\"string\"},{\"name\":\"id_factory\",\"type\":\"string\"}],\"name\":\"set_factory3\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"idA\",\"type\":\"int256\"}],\"name\":\"set_trace\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idA\",\"type\":\"int256\"}],\"name\":\"getPasture\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"int256\"}],\"name\":\"CreateResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"int256\"}],\"name\":\"InsertResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"int256\"}],\"name\":\"UpdateResult\",\"type\":\"event\"}]"

// TlsBin is the compiled bytecode used for deploying new contracts.
var TlsBin = ""

// DeployTls deploys a new contract, binding an instance of Tls to it.
func DeployTls(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Tls, error) {
	parsed, err := abi.JSON(strings.NewReader(TlsABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TlsBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Tls{TlsCaller: TlsCaller{contract: contract}, TlsTransactor: TlsTransactor{contract: contract}, TlsFilterer: TlsFilterer{contract: contract}}, nil
}

func AsyncDeployTls(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(TlsABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(TlsBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// Tls is an auto generated Go binding around a Solidity contract.
type Tls struct {
	TlsCaller     // Read-only binding to the contract
	TlsTransactor // Write-only binding to the contract
	TlsFilterer   // Log filterer for contract events
}

// TlsCaller is an auto generated read-only Go binding around a Solidity contract.
type TlsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TlsTransactor is an auto generated write-only Go binding around a Solidity contract.
type TlsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TlsFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type TlsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TlsSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type TlsSession struct {
	Contract     *Tls              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TlsCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type TlsCallerSession struct {
	Contract *TlsCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// TlsTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type TlsTransactorSession struct {
	Contract     *TlsTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TlsRaw is an auto generated low-level Go binding around a Solidity contract.
type TlsRaw struct {
	Contract *Tls // Generic contract binding to access the raw methods on
}

// TlsCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type TlsCallerRaw struct {
	Contract *TlsCaller // Generic read-only contract binding to access the raw methods on
}

// TlsTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type TlsTransactorRaw struct {
	Contract *TlsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTls creates a new instance of Tls, bound to a specific deployed contract.
func NewTls(address common.Address, backend bind.ContractBackend) (*Tls, error) {
	contract, err := bindTls(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Tls{TlsCaller: TlsCaller{contract: contract}, TlsTransactor: TlsTransactor{contract: contract}, TlsFilterer: TlsFilterer{contract: contract}}, nil
}

// NewTlsCaller creates a new read-only instance of Tls, bound to a specific deployed contract.
func NewTlsCaller(address common.Address, caller bind.ContractCaller) (*TlsCaller, error) {
	contract, err := bindTls(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TlsCaller{contract: contract}, nil
}

// NewTlsTransactor creates a new write-only instance of Tls, bound to a specific deployed contract.
func NewTlsTransactor(address common.Address, transactor bind.ContractTransactor) (*TlsTransactor, error) {
	contract, err := bindTls(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TlsTransactor{contract: contract}, nil
}

// NewTlsFilterer creates a new log filterer instance of Tls, bound to a specific deployed contract.
func NewTlsFilterer(address common.Address, filterer bind.ContractFilterer) (*TlsFilterer, error) {
	contract, err := bindTls(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TlsFilterer{contract: contract}, nil
}

// bindTls binds a generic wrapper to an already deployed contract.
func bindTls(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TlsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Tls *TlsRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Tls.Contract.TlsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Tls *TlsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.TlsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Tls *TlsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.TlsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Tls *TlsCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Tls.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Tls *TlsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Tls *TlsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.contract.Transact(opts, method, params...)
}

// GetByFacIdFactory1 is a free data retrieval call binding the contract method 0x5c068bea.
//
// Solidity: function getByFacId_factory1(string id_factory) constant returns(int256[], string[], string[])
func (_Tls *TlsCaller) GetByFacIdFactory1(opts *bind.CallOpts, id_factory string) ([]*big.Int, []string, []string, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]string)
		ret2 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _Tls.contract.Call(opts, out, "getByFacId_factory1", id_factory)
	return *ret0, *ret1, *ret2, err
}

// GetByFacIdFactory1 is a free data retrieval call binding the contract method 0x5c068bea.
//
// Solidity: function getByFacId_factory1(string id_factory) constant returns(int256[], string[], string[])
func (_Tls *TlsSession) GetByFacIdFactory1(id_factory string) ([]*big.Int, []string, []string, error) {
	return _Tls.Contract.GetByFacIdFactory1(&_Tls.CallOpts, id_factory)
}

// GetByFacIdFactory1 is a free data retrieval call binding the contract method 0x5c068bea.
//
// Solidity: function getByFacId_factory1(string id_factory) constant returns(int256[], string[], string[])
func (_Tls *TlsCallerSession) GetByFacIdFactory1(id_factory string) ([]*big.Int, []string, []string, error) {
	return _Tls.Contract.GetByFacIdFactory1(&_Tls.CallOpts, id_factory)
}

// GetByFacIdFactory2 is a free data retrieval call binding the contract method 0x069a32b1.
//
// Solidity: function getByFacId_factory2(string id_factory) constant returns(string[], string[])
func (_Tls *TlsCaller) GetByFacIdFactory2(opts *bind.CallOpts, id_factory string) ([]string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Tls.contract.Call(opts, out, "getByFacId_factory2", id_factory)
	return *ret0, *ret1, err
}

// GetByFacIdFactory2 is a free data retrieval call binding the contract method 0x069a32b1.
//
// Solidity: function getByFacId_factory2(string id_factory) constant returns(string[], string[])
func (_Tls *TlsSession) GetByFacIdFactory2(id_factory string) ([]string, []string, error) {
	return _Tls.Contract.GetByFacIdFactory2(&_Tls.CallOpts, id_factory)
}

// GetByFacIdFactory2 is a free data retrieval call binding the contract method 0x069a32b1.
//
// Solidity: function getByFacId_factory2(string id_factory) constant returns(string[], string[])
func (_Tls *TlsCallerSession) GetByFacIdFactory2(id_factory string) ([]string, []string, error) {
	return _Tls.Contract.GetByFacIdFactory2(&_Tls.CallOpts, id_factory)
}

// GetByFacIdFactory3 is a free data retrieval call binding the contract method 0xb4852cb0.
//
// Solidity: function getByFacId_factory3(string id_factory) constant returns(string[], string[], string[])
func (_Tls *TlsCaller) GetByFacIdFactory3(opts *bind.CallOpts, id_factory string) ([]string, []string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
		ret2 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _Tls.contract.Call(opts, out, "getByFacId_factory3", id_factory)
	return *ret0, *ret1, *ret2, err
}

// GetByFacIdFactory3 is a free data retrieval call binding the contract method 0xb4852cb0.
//
// Solidity: function getByFacId_factory3(string id_factory) constant returns(string[], string[], string[])
func (_Tls *TlsSession) GetByFacIdFactory3(id_factory string) ([]string, []string, []string, error) {
	return _Tls.Contract.GetByFacIdFactory3(&_Tls.CallOpts, id_factory)
}

// GetByFacIdFactory3 is a free data retrieval call binding the contract method 0xb4852cb0.
//
// Solidity: function getByFacId_factory3(string id_factory) constant returns(string[], string[], string[])
func (_Tls *TlsCallerSession) GetByFacIdFactory3(id_factory string) ([]string, []string, []string, error) {
	return _Tls.Contract.GetByFacIdFactory3(&_Tls.CallOpts, id_factory)
}

// GetByFacIdTrace1 is a free data retrieval call binding the contract method 0x481248f2.
//
// Solidity: function getByFacId_trace1(string id_factory) constant returns(int256[])
func (_Tls *TlsCaller) GetByFacIdTrace1(opts *bind.CallOpts, id_factory string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByFacId_trace1", id_factory)
	return *ret0, err
}

// GetByFacIdTrace1 is a free data retrieval call binding the contract method 0x481248f2.
//
// Solidity: function getByFacId_trace1(string id_factory) constant returns(int256[])
func (_Tls *TlsSession) GetByFacIdTrace1(id_factory string) ([]*big.Int, error) {
	return _Tls.Contract.GetByFacIdTrace1(&_Tls.CallOpts, id_factory)
}

// GetByFacIdTrace1 is a free data retrieval call binding the contract method 0x481248f2.
//
// Solidity: function getByFacId_trace1(string id_factory) constant returns(int256[])
func (_Tls *TlsCallerSession) GetByFacIdTrace1(id_factory string) ([]*big.Int, error) {
	return _Tls.Contract.GetByFacIdTrace1(&_Tls.CallOpts, id_factory)
}

// GetByFacIdTrace2 is a free data retrieval call binding the contract method 0xb1128363.
//
// Solidity: function getByFacId_trace2(string id_factory) constant returns(int256[])
func (_Tls *TlsCaller) GetByFacIdTrace2(opts *bind.CallOpts, id_factory string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByFacId_trace2", id_factory)
	return *ret0, err
}

// GetByFacIdTrace2 is a free data retrieval call binding the contract method 0xb1128363.
//
// Solidity: function getByFacId_trace2(string id_factory) constant returns(int256[])
func (_Tls *TlsSession) GetByFacIdTrace2(id_factory string) ([]*big.Int, error) {
	return _Tls.Contract.GetByFacIdTrace2(&_Tls.CallOpts, id_factory)
}

// GetByFacIdTrace2 is a free data retrieval call binding the contract method 0xb1128363.
//
// Solidity: function getByFacId_trace2(string id_factory) constant returns(int256[])
func (_Tls *TlsCallerSession) GetByFacIdTrace2(id_factory string) ([]*big.Int, error) {
	return _Tls.Contract.GetByFacIdTrace2(&_Tls.CallOpts, id_factory)
}

// GetByIdAPasture is a free data retrieval call binding the contract method 0x6a3c95b5.
//
// Solidity: function getByIdA_pasture(int256[] _idA) constant returns(string[], int256[], string[], string[])
func (_Tls *TlsCaller) GetByIdAPasture(opts *bind.CallOpts, _idA []*big.Int) ([]string, []*big.Int, []string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]*big.Int)
		ret2 = new([]string)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Tls.contract.Call(opts, out, "getByIdA_pasture", _idA)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetByIdAPasture is a free data retrieval call binding the contract method 0x6a3c95b5.
//
// Solidity: function getByIdA_pasture(int256[] _idA) constant returns(string[], int256[], string[], string[])
func (_Tls *TlsSession) GetByIdAPasture(_idA []*big.Int) ([]string, []*big.Int, []string, []string, error) {
	return _Tls.Contract.GetByIdAPasture(&_Tls.CallOpts, _idA)
}

// GetByIdAPasture is a free data retrieval call binding the contract method 0x6a3c95b5.
//
// Solidity: function getByIdA_pasture(int256[] _idA) constant returns(string[], int256[], string[], string[])
func (_Tls *TlsCallerSession) GetByIdAPasture(_idA []*big.Int) ([]string, []*big.Int, []string, []string, error) {
	return _Tls.Contract.GetByIdAPasture(&_Tls.CallOpts, _idA)
}

// GetByIdBFactory1 is a free data retrieval call binding the contract method 0x34bce7f7.
//
// Solidity: function getByIdB_factory1(int256[] _idB) constant returns(int256[], string[], string[])
func (_Tls *TlsCaller) GetByIdBFactory1(opts *bind.CallOpts, _idB []*big.Int) ([]*big.Int, []string, []string, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]string)
		ret2 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _Tls.contract.Call(opts, out, "getByIdB_factory1", _idB)
	return *ret0, *ret1, *ret2, err
}

// GetByIdBFactory1 is a free data retrieval call binding the contract method 0x34bce7f7.
//
// Solidity: function getByIdB_factory1(int256[] _idB) constant returns(int256[], string[], string[])
func (_Tls *TlsSession) GetByIdBFactory1(_idB []*big.Int) ([]*big.Int, []string, []string, error) {
	return _Tls.Contract.GetByIdBFactory1(&_Tls.CallOpts, _idB)
}

// GetByIdBFactory1 is a free data retrieval call binding the contract method 0x34bce7f7.
//
// Solidity: function getByIdB_factory1(int256[] _idB) constant returns(int256[], string[], string[])
func (_Tls *TlsCallerSession) GetByIdBFactory1(_idB []*big.Int) ([]*big.Int, []string, []string, error) {
	return _Tls.Contract.GetByIdBFactory1(&_Tls.CallOpts, _idB)
}

// GetByIdBFactory2 is a free data retrieval call binding the contract method 0x301908ab.
//
// Solidity: function getByIdB_factory2(int256[] _idB) constant returns(string[], string[])
func (_Tls *TlsCaller) GetByIdBFactory2(opts *bind.CallOpts, _idB []*big.Int) ([]string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Tls.contract.Call(opts, out, "getByIdB_factory2", _idB)
	return *ret0, *ret1, err
}

// GetByIdBFactory2 is a free data retrieval call binding the contract method 0x301908ab.
//
// Solidity: function getByIdB_factory2(int256[] _idB) constant returns(string[], string[])
func (_Tls *TlsSession) GetByIdBFactory2(_idB []*big.Int) ([]string, []string, error) {
	return _Tls.Contract.GetByIdBFactory2(&_Tls.CallOpts, _idB)
}

// GetByIdBFactory2 is a free data retrieval call binding the contract method 0x301908ab.
//
// Solidity: function getByIdB_factory2(int256[] _idB) constant returns(string[], string[])
func (_Tls *TlsCallerSession) GetByIdBFactory2(_idB []*big.Int) ([]string, []string, error) {
	return _Tls.Contract.GetByIdBFactory2(&_Tls.CallOpts, _idB)
}

// GetByIdBFactory3 is a free data retrieval call binding the contract method 0x7b4fcbcb.
//
// Solidity: function getByIdB_factory3(int256[] _idB) constant returns(string[], string[], string[])
func (_Tls *TlsCaller) GetByIdBFactory3(opts *bind.CallOpts, _idB []*big.Int) ([]string, []string, []string, error) {
	var (
		ret0 = new([]string)
		ret1 = new([]string)
		ret2 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _Tls.contract.Call(opts, out, "getByIdB_factory3", _idB)
	return *ret0, *ret1, *ret2, err
}

// GetByIdBFactory3 is a free data retrieval call binding the contract method 0x7b4fcbcb.
//
// Solidity: function getByIdB_factory3(int256[] _idB) constant returns(string[], string[], string[])
func (_Tls *TlsSession) GetByIdBFactory3(_idB []*big.Int) ([]string, []string, []string, error) {
	return _Tls.Contract.GetByIdBFactory3(&_Tls.CallOpts, _idB)
}

// GetByIdBFactory3 is a free data retrieval call binding the contract method 0x7b4fcbcb.
//
// Solidity: function getByIdB_factory3(int256[] _idB) constant returns(string[], string[], string[])
func (_Tls *TlsCallerSession) GetByIdBFactory3(_idB []*big.Int) ([]string, []string, []string, error) {
	return _Tls.Contract.GetByIdBFactory3(&_Tls.CallOpts, _idB)
}

// GetByIdCLogistics is a free data retrieval call binding the contract method 0x653f97f7.
//
// Solidity: function getByIdC_logistics(int256[] idC_list) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsCaller) GetByIdCLogistics(opts *bind.CallOpts, idC_list []*big.Int) ([]*big.Int, []string, []string, []string, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]string)
		ret2 = new([]string)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Tls.contract.Call(opts, out, "getByIdC_logistics", idC_list)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetByIdCLogistics is a free data retrieval call binding the contract method 0x653f97f7.
//
// Solidity: function getByIdC_logistics(int256[] idC_list) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsSession) GetByIdCLogistics(idC_list []*big.Int) ([]*big.Int, []string, []string, []string, error) {
	return _Tls.Contract.GetByIdCLogistics(&_Tls.CallOpts, idC_list)
}

// GetByIdCLogistics is a free data retrieval call binding the contract method 0x653f97f7.
//
// Solidity: function getByIdC_logistics(int256[] idC_list) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsCallerSession) GetByIdCLogistics(idC_list []*big.Int) ([]*big.Int, []string, []string, []string, error) {
	return _Tls.Contract.GetByIdCLogistics(&_Tls.CallOpts, idC_list)
}

// GetByLogIdTrace1 is a free data retrieval call binding the contract method 0x3492cdee.
//
// Solidity: function getByLogId_trace1(string id_logistics) constant returns(int256[])
func (_Tls *TlsCaller) GetByLogIdTrace1(opts *bind.CallOpts, id_logistics string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByLogId_trace1", id_logistics)
	return *ret0, err
}

// GetByLogIdTrace1 is a free data retrieval call binding the contract method 0x3492cdee.
//
// Solidity: function getByLogId_trace1(string id_logistics) constant returns(int256[])
func (_Tls *TlsSession) GetByLogIdTrace1(id_logistics string) ([]*big.Int, error) {
	return _Tls.Contract.GetByLogIdTrace1(&_Tls.CallOpts, id_logistics)
}

// GetByLogIdTrace1 is a free data retrieval call binding the contract method 0x3492cdee.
//
// Solidity: function getByLogId_trace1(string id_logistics) constant returns(int256[])
func (_Tls *TlsCallerSession) GetByLogIdTrace1(id_logistics string) ([]*big.Int, error) {
	return _Tls.Contract.GetByLogIdTrace1(&_Tls.CallOpts, id_logistics)
}

// GetByLogIdTrace2 is a free data retrieval call binding the contract method 0x185c3b25.
//
// Solidity: function getByLogId_trace2(string id_logistics) constant returns(int256[])
func (_Tls *TlsCaller) GetByLogIdTrace2(opts *bind.CallOpts, id_logistics string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByLogId_trace2", id_logistics)
	return *ret0, err
}

// GetByLogIdTrace2 is a free data retrieval call binding the contract method 0x185c3b25.
//
// Solidity: function getByLogId_trace2(string id_logistics) constant returns(int256[])
func (_Tls *TlsSession) GetByLogIdTrace2(id_logistics string) ([]*big.Int, error) {
	return _Tls.Contract.GetByLogIdTrace2(&_Tls.CallOpts, id_logistics)
}

// GetByLogIdTrace2 is a free data retrieval call binding the contract method 0x185c3b25.
//
// Solidity: function getByLogId_trace2(string id_logistics) constant returns(int256[])
func (_Tls *TlsCallerSession) GetByLogIdTrace2(id_logistics string) ([]*big.Int, error) {
	return _Tls.Contract.GetByLogIdTrace2(&_Tls.CallOpts, id_logistics)
}

// GetByLogIdTrace3 is a free data retrieval call binding the contract method 0xe746f230.
//
// Solidity: function getByLogId_trace3(string id_logistics) constant returns(int256[])
func (_Tls *TlsCaller) GetByLogIdTrace3(opts *bind.CallOpts, id_logistics string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByLogId_trace3", id_logistics)
	return *ret0, err
}

// GetByLogIdTrace3 is a free data retrieval call binding the contract method 0xe746f230.
//
// Solidity: function getByLogId_trace3(string id_logistics) constant returns(int256[])
func (_Tls *TlsSession) GetByLogIdTrace3(id_logistics string) ([]*big.Int, error) {
	return _Tls.Contract.GetByLogIdTrace3(&_Tls.CallOpts, id_logistics)
}

// GetByLogIdTrace3 is a free data retrieval call binding the contract method 0xe746f230.
//
// Solidity: function getByLogId_trace3(string id_logistics) constant returns(int256[])
func (_Tls *TlsCallerSession) GetByLogIdTrace3(id_logistics string) ([]*big.Int, error) {
	return _Tls.Contract.GetByLogIdTrace3(&_Tls.CallOpts, id_logistics)
}

// GetByLogidLogistics is a free data retrieval call binding the contract method 0xa4807cf6.
//
// Solidity: function getByLogid_logistics(string id_logistics) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsCaller) GetByLogidLogistics(opts *bind.CallOpts, id_logistics string) ([]*big.Int, []string, []string, []string, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]string)
		ret2 = new([]string)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Tls.contract.Call(opts, out, "getByLogid_logistics", id_logistics)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetByLogidLogistics is a free data retrieval call binding the contract method 0xa4807cf6.
//
// Solidity: function getByLogid_logistics(string id_logistics) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsSession) GetByLogidLogistics(id_logistics string) ([]*big.Int, []string, []string, []string, error) {
	return _Tls.Contract.GetByLogidLogistics(&_Tls.CallOpts, id_logistics)
}

// GetByLogidLogistics is a free data retrieval call binding the contract method 0xa4807cf6.
//
// Solidity: function getByLogid_logistics(string id_logistics) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsCallerSession) GetByLogidLogistics(id_logistics string) ([]*big.Int, []string, []string, []string, error) {
	return _Tls.Contract.GetByLogidLogistics(&_Tls.CallOpts, id_logistics)
}

// GetByPasIdPasture is a free data retrieval call binding the contract method 0xc4c6963e.
//
// Solidity: function getByPasId_pasture(string id_pasture) constant returns(int256[], string[], int256[], string[])
func (_Tls *TlsCaller) GetByPasIdPasture(opts *bind.CallOpts, id_pasture string) ([]*big.Int, []string, []*big.Int, []string, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]string)
		ret2 = new([]*big.Int)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Tls.contract.Call(opts, out, "getByPasId_pasture", id_pasture)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetByPasIdPasture is a free data retrieval call binding the contract method 0xc4c6963e.
//
// Solidity: function getByPasId_pasture(string id_pasture) constant returns(int256[], string[], int256[], string[])
func (_Tls *TlsSession) GetByPasIdPasture(id_pasture string) ([]*big.Int, []string, []*big.Int, []string, error) {
	return _Tls.Contract.GetByPasIdPasture(&_Tls.CallOpts, id_pasture)
}

// GetByPasIdPasture is a free data retrieval call binding the contract method 0xc4c6963e.
//
// Solidity: function getByPasId_pasture(string id_pasture) constant returns(int256[], string[], int256[], string[])
func (_Tls *TlsCallerSession) GetByPasIdPasture(id_pasture string) ([]*big.Int, []string, []*big.Int, []string, error) {
	return _Tls.Contract.GetByPasIdPasture(&_Tls.CallOpts, id_pasture)
}

// GetBySaleIdTrace1 is a free data retrieval call binding the contract method 0x9625c31d.
//
// Solidity: function getBySaleId_trace1(string id_sales) constant returns(int256[])
func (_Tls *TlsCaller) GetBySaleIdTrace1(opts *bind.CallOpts, id_sales string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getBySaleId_trace1", id_sales)
	return *ret0, err
}

// GetBySaleIdTrace1 is a free data retrieval call binding the contract method 0x9625c31d.
//
// Solidity: function getBySaleId_trace1(string id_sales) constant returns(int256[])
func (_Tls *TlsSession) GetBySaleIdTrace1(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace1(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace1 is a free data retrieval call binding the contract method 0x9625c31d.
//
// Solidity: function getBySaleId_trace1(string id_sales) constant returns(int256[])
func (_Tls *TlsCallerSession) GetBySaleIdTrace1(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace1(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace2 is a free data retrieval call binding the contract method 0xad69967c.
//
// Solidity: function getBySaleId_trace2(string id_sales) constant returns(int256[])
func (_Tls *TlsCaller) GetBySaleIdTrace2(opts *bind.CallOpts, id_sales string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getBySaleId_trace2", id_sales)
	return *ret0, err
}

// GetBySaleIdTrace2 is a free data retrieval call binding the contract method 0xad69967c.
//
// Solidity: function getBySaleId_trace2(string id_sales) constant returns(int256[])
func (_Tls *TlsSession) GetBySaleIdTrace2(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace2(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace2 is a free data retrieval call binding the contract method 0xad69967c.
//
// Solidity: function getBySaleId_trace2(string id_sales) constant returns(int256[])
func (_Tls *TlsCallerSession) GetBySaleIdTrace2(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace2(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace3 is a free data retrieval call binding the contract method 0xe0fc8555.
//
// Solidity: function getBySaleId_trace3(string id_sales) constant returns(int256[])
func (_Tls *TlsCaller) GetBySaleIdTrace3(opts *bind.CallOpts, id_sales string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getBySaleId_trace3", id_sales)
	return *ret0, err
}

// GetBySaleIdTrace3 is a free data retrieval call binding the contract method 0xe0fc8555.
//
// Solidity: function getBySaleId_trace3(string id_sales) constant returns(int256[])
func (_Tls *TlsSession) GetBySaleIdTrace3(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace3(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace3 is a free data retrieval call binding the contract method 0xe0fc8555.
//
// Solidity: function getBySaleId_trace3(string id_sales) constant returns(int256[])
func (_Tls *TlsCallerSession) GetBySaleIdTrace3(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace3(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace4 is a free data retrieval call binding the contract method 0x553827eb.
//
// Solidity: function getBySaleId_trace4(string id_sales) constant returns(int256[])
func (_Tls *TlsCaller) GetBySaleIdTrace4(opts *bind.CallOpts, id_sales string) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getBySaleId_trace4", id_sales)
	return *ret0, err
}

// GetBySaleIdTrace4 is a free data retrieval call binding the contract method 0x553827eb.
//
// Solidity: function getBySaleId_trace4(string id_sales) constant returns(int256[])
func (_Tls *TlsSession) GetBySaleIdTrace4(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace4(&_Tls.CallOpts, id_sales)
}

// GetBySaleIdTrace4 is a free data retrieval call binding the contract method 0x553827eb.
//
// Solidity: function getBySaleId_trace4(string id_sales) constant returns(int256[])
func (_Tls *TlsCallerSession) GetBySaleIdTrace4(id_sales string) ([]*big.Int, error) {
	return _Tls.Contract.GetBySaleIdTrace4(&_Tls.CallOpts, id_sales)
}

// GetBySaleidSales is a free data retrieval call binding the contract method 0x7f0c0161.
//
// Solidity: function getBySaleid_sales(string id_sales) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsCaller) GetBySaleidSales(opts *bind.CallOpts, id_sales string) ([]*big.Int, []string, []string, []string, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]string)
		ret2 = new([]string)
		ret3 = new([]string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Tls.contract.Call(opts, out, "getBySaleid_sales", id_sales)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetBySaleidSales is a free data retrieval call binding the contract method 0x7f0c0161.
//
// Solidity: function getBySaleid_sales(string id_sales) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsSession) GetBySaleidSales(id_sales string) ([]*big.Int, []string, []string, []string, error) {
	return _Tls.Contract.GetBySaleidSales(&_Tls.CallOpts, id_sales)
}

// GetBySaleidSales is a free data retrieval call binding the contract method 0x7f0c0161.
//
// Solidity: function getBySaleid_sales(string id_sales) constant returns(int256[], string[], string[], string[])
func (_Tls *TlsCallerSession) GetBySaleidSales(id_sales string) ([]*big.Int, []string, []string, []string, error) {
	return _Tls.Contract.GetBySaleidSales(&_Tls.CallOpts, id_sales)
}

// GetByidAId is a free data retrieval call binding the contract method 0x000dd414.
//
// Solidity: function getByidA_id(int256 _idA, string idStr) constant returns(int256)
func (_Tls *TlsCaller) GetByidAId(opts *bind.CallOpts, _idA *big.Int, idStr string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByidA_id", _idA, idStr)
	return *ret0, err
}

// GetByidAId is a free data retrieval call binding the contract method 0x000dd414.
//
// Solidity: function getByidA_id(int256 _idA, string idStr) constant returns(int256)
func (_Tls *TlsSession) GetByidAId(_idA *big.Int, idStr string) (*big.Int, error) {
	return _Tls.Contract.GetByidAId(&_Tls.CallOpts, _idA, idStr)
}

// GetByidAId is a free data retrieval call binding the contract method 0x000dd414.
//
// Solidity: function getByidA_id(int256 _idA, string idStr) constant returns(int256)
func (_Tls *TlsCallerSession) GetByidAId(_idA *big.Int, idStr string) (*big.Int, error) {
	return _Tls.Contract.GetByidAId(&_Tls.CallOpts, _idA, idStr)
}

// GetByidBIdA is a free data retrieval call binding the contract method 0xa45f5cc0.
//
// Solidity: function getByidB_idA(int256 _idB) constant returns(int256)
func (_Tls *TlsCaller) GetByidBIdA(opts *bind.CallOpts, _idB *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getByidB_idA", _idB)
	return *ret0, err
}

// GetByidBIdA is a free data retrieval call binding the contract method 0xa45f5cc0.
//
// Solidity: function getByidB_idA(int256 _idB) constant returns(int256)
func (_Tls *TlsSession) GetByidBIdA(_idB *big.Int) (*big.Int, error) {
	return _Tls.Contract.GetByidBIdA(&_Tls.CallOpts, _idB)
}

// GetByidBIdA is a free data retrieval call binding the contract method 0xa45f5cc0.
//
// Solidity: function getByidB_idA(int256 _idB) constant returns(int256)
func (_Tls *TlsCallerSession) GetByidBIdA(_idB *big.Int) (*big.Int, error) {
	return _Tls.Contract.GetByidBIdA(&_Tls.CallOpts, _idB)
}

// GetEmptyFactory is a free data retrieval call binding the contract method 0xb485b236.
//
// Solidity: function getEmpty_factory() constant returns(int256[], int256[])
func (_Tls *TlsCaller) GetEmptyFactory(opts *bind.CallOpts) ([]*big.Int, []*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Tls.contract.Call(opts, out, "getEmpty_factory")
	return *ret0, *ret1, err
}

// GetEmptyFactory is a free data retrieval call binding the contract method 0xb485b236.
//
// Solidity: function getEmpty_factory() constant returns(int256[], int256[])
func (_Tls *TlsSession) GetEmptyFactory() ([]*big.Int, []*big.Int, error) {
	return _Tls.Contract.GetEmptyFactory(&_Tls.CallOpts)
}

// GetEmptyFactory is a free data retrieval call binding the contract method 0xb485b236.
//
// Solidity: function getEmpty_factory() constant returns(int256[], int256[])
func (_Tls *TlsCallerSession) GetEmptyFactory() ([]*big.Int, []*big.Int, error) {
	return _Tls.Contract.GetEmptyFactory(&_Tls.CallOpts)
}

// GetEmptyLogistics is a free data retrieval call binding the contract method 0x6cd06b32.
//
// Solidity: function getEmpty_logistics() constant returns(int256[], int256[], int256[])
func (_Tls *TlsCaller) GetEmptyLogistics(opts *bind.CallOpts) ([]*big.Int, []*big.Int, []*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
		ret1 = new([]*big.Int)
		ret2 = new([]*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _Tls.contract.Call(opts, out, "getEmpty_logistics")
	return *ret0, *ret1, *ret2, err
}

// GetEmptyLogistics is a free data retrieval call binding the contract method 0x6cd06b32.
//
// Solidity: function getEmpty_logistics() constant returns(int256[], int256[], int256[])
func (_Tls *TlsSession) GetEmptyLogistics() ([]*big.Int, []*big.Int, []*big.Int, error) {
	return _Tls.Contract.GetEmptyLogistics(&_Tls.CallOpts)
}

// GetEmptyLogistics is a free data retrieval call binding the contract method 0x6cd06b32.
//
// Solidity: function getEmpty_logistics() constant returns(int256[], int256[], int256[])
func (_Tls *TlsCallerSession) GetEmptyLogistics() ([]*big.Int, []*big.Int, []*big.Int, error) {
	return _Tls.Contract.GetEmptyLogistics(&_Tls.CallOpts)
}

// GetEmptyPasture is a free data retrieval call binding the contract method 0x5c85e231.
//
// Solidity: function getEmpty_pasture() constant returns(int256[])
func (_Tls *TlsCaller) GetEmptyPasture(opts *bind.CallOpts) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "getEmpty_pasture")
	return *ret0, err
}

// GetEmptyPasture is a free data retrieval call binding the contract method 0x5c85e231.
//
// Solidity: function getEmpty_pasture() constant returns(int256[])
func (_Tls *TlsSession) GetEmptyPasture() ([]*big.Int, error) {
	return _Tls.Contract.GetEmptyPasture(&_Tls.CallOpts)
}

// GetEmptyPasture is a free data retrieval call binding the contract method 0x5c85e231.
//
// Solidity: function getEmpty_pasture() constant returns(int256[])
func (_Tls *TlsCallerSession) GetEmptyPasture() ([]*big.Int, error) {
	return _Tls.Contract.GetEmptyPasture(&_Tls.CallOpts)
}

// GetFactory is a free data retrieval call binding the contract method 0x964c8e4f.
//
// Solidity: function getFactory(int256 _idB) constant returns(int256, string, string, string, string, string, string, string, string)
func (_Tls *TlsCaller) GetFactory(opts *bind.CallOpts, _idB *big.Int) (*big.Int, string, string, string, string, string, string, string, string, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
		ret4 = new(string)
		ret5 = new(string)
		ret6 = new(string)
		ret7 = new(string)
		ret8 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
		ret5,
		ret6,
		ret7,
		ret8,
	}
	err := _Tls.contract.Call(opts, out, "getFactory", _idB)
	return *ret0, *ret1, *ret2, *ret3, *ret4, *ret5, *ret6, *ret7, *ret8, err
}

// GetFactory is a free data retrieval call binding the contract method 0x964c8e4f.
//
// Solidity: function getFactory(int256 _idB) constant returns(int256, string, string, string, string, string, string, string, string)
func (_Tls *TlsSession) GetFactory(_idB *big.Int) (*big.Int, string, string, string, string, string, string, string, string, error) {
	return _Tls.Contract.GetFactory(&_Tls.CallOpts, _idB)
}

// GetFactory is a free data retrieval call binding the contract method 0x964c8e4f.
//
// Solidity: function getFactory(int256 _idB) constant returns(int256, string, string, string, string, string, string, string, string)
func (_Tls *TlsCallerSession) GetFactory(_idB *big.Int) (*big.Int, string, string, string, string, string, string, string, string, error) {
	return _Tls.Contract.GetFactory(&_Tls.CallOpts, _idB)
}

// GetLogistics is a free data retrieval call binding the contract method 0xdb122bfe.
//
// Solidity: function getLogistics(int256 _idC) constant returns(int256, string, string, string)
func (_Tls *TlsCaller) GetLogistics(opts *bind.CallOpts, _idC *big.Int) (*big.Int, string, string, string, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Tls.contract.Call(opts, out, "getLogistics", _idC)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetLogistics is a free data retrieval call binding the contract method 0xdb122bfe.
//
// Solidity: function getLogistics(int256 _idC) constant returns(int256, string, string, string)
func (_Tls *TlsSession) GetLogistics(_idC *big.Int) (*big.Int, string, string, string, error) {
	return _Tls.Contract.GetLogistics(&_Tls.CallOpts, _idC)
}

// GetLogistics is a free data retrieval call binding the contract method 0xdb122bfe.
//
// Solidity: function getLogistics(int256 _idC) constant returns(int256, string, string, string)
func (_Tls *TlsCallerSession) GetLogistics(_idC *big.Int) (*big.Int, string, string, string, error) {
	return _Tls.Contract.GetLogistics(&_Tls.CallOpts, _idC)
}

// GetPasture is a free data retrieval call binding the contract method 0xff5f3dfc.
//
// Solidity: function getPasture(int256 _idA) constant returns(int256, string, int256, string, string)
func (_Tls *TlsCaller) GetPasture(opts *bind.CallOpts, _idA *big.Int) (*big.Int, string, *big.Int, string, string, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(string)
		ret2 = new(*big.Int)
		ret3 = new(string)
		ret4 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _Tls.contract.Call(opts, out, "getPasture", _idA)
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetPasture is a free data retrieval call binding the contract method 0xff5f3dfc.
//
// Solidity: function getPasture(int256 _idA) constant returns(int256, string, int256, string, string)
func (_Tls *TlsSession) GetPasture(_idA *big.Int) (*big.Int, string, *big.Int, string, string, error) {
	return _Tls.Contract.GetPasture(&_Tls.CallOpts, _idA)
}

// GetPasture is a free data retrieval call binding the contract method 0xff5f3dfc.
//
// Solidity: function getPasture(int256 _idA) constant returns(int256, string, int256, string, string)
func (_Tls *TlsCallerSession) GetPasture(_idA *big.Int) (*big.Int, string, *big.Int, string, string, error) {
	return _Tls.Contract.GetPasture(&_Tls.CallOpts, _idA)
}

// GetSales is a free data retrieval call binding the contract method 0x514b375f.
//
// Solidity: function getSales(int256 _idD) constant returns(int256, string, string, string, string)
func (_Tls *TlsCaller) GetSales(opts *bind.CallOpts, _idD *big.Int) (*big.Int, string, string, string, string, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
		ret4 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _Tls.contract.Call(opts, out, "getSales", _idD)
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetSales is a free data retrieval call binding the contract method 0x514b375f.
//
// Solidity: function getSales(int256 _idD) constant returns(int256, string, string, string, string)
func (_Tls *TlsSession) GetSales(_idD *big.Int) (*big.Int, string, string, string, string, error) {
	return _Tls.Contract.GetSales(&_Tls.CallOpts, _idD)
}

// GetSales is a free data retrieval call binding the contract method 0x514b375f.
//
// Solidity: function getSales(int256 _idD) constant returns(int256, string, string, string, string)
func (_Tls *TlsCallerSession) GetSales(_idD *big.Int) (*big.Int, string, string, string, string, error) {
	return _Tls.Contract.GetSales(&_Tls.CallOpts, _idD)
}

// GetId is a free data retrieval call binding the contract method 0xd4e2e579.
//
// Solidity: function get_id(string idStr) constant returns(int256)
func (_Tls *TlsCaller) GetId(opts *bind.CallOpts, idStr string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "get_id", idStr)
	return *ret0, err
}

// GetId is a free data retrieval call binding the contract method 0xd4e2e579.
//
// Solidity: function get_id(string idStr) constant returns(int256)
func (_Tls *TlsSession) GetId(idStr string) (*big.Int, error) {
	return _Tls.Contract.GetId(&_Tls.CallOpts, idStr)
}

// GetId is a free data retrieval call binding the contract method 0xd4e2e579.
//
// Solidity: function get_id(string idStr) constant returns(int256)
func (_Tls *TlsCallerSession) GetId(idStr string) (*big.Int, error) {
	return _Tls.Contract.GetId(&_Tls.CallOpts, idStr)
}

// TableFactory is a free data retrieval call binding the contract method 0x6c368371.
//
// Solidity: function tableFactory() constant returns(address)
func (_Tls *TlsCaller) TableFactory(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Tls.contract.Call(opts, out, "tableFactory")
	return *ret0, err
}

// TableFactory is a free data retrieval call binding the contract method 0x6c368371.
//
// Solidity: function tableFactory() constant returns(address)
func (_Tls *TlsSession) TableFactory() (common.Address, error) {
	return _Tls.Contract.TableFactory(&_Tls.CallOpts)
}

// TableFactory is a free data retrieval call binding the contract method 0x6c368371.
//
// Solidity: function tableFactory() constant returns(address)
func (_Tls *TlsCallerSession) TableFactory() (common.Address, error) {
	return _Tls.Contract.TableFactory(&_Tls.CallOpts)
}

// Init is a paid mutator transaction binding the contract method 0xe1c7392a.
//
// Solidity: function init() returns(int256)
func (_Tls *TlsTransactor) Init(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "init")
}

func (_Tls *TlsTransactor) AsyncInit(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "init")
}

// Init is a paid mutator transaction binding the contract method 0xe1c7392a.
//
// Solidity: function init() returns(int256)
func (_Tls *TlsSession) Init() (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.Init(&_Tls.TransactOpts)
}

func (_Tls *TlsSession) AsyncInit(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Tls.Contract.AsyncInit(handler, &_Tls.TransactOpts)
}

// Init is a paid mutator transaction binding the contract method 0xe1c7392a.
//
// Solidity: function init() returns(int256)
func (_Tls *TlsTransactorSession) Init() (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.Init(&_Tls.TransactOpts)
}

func (_Tls *TlsTransactorSession) AsyncInit(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Tls.Contract.AsyncInit(handler, &_Tls.TransactOpts)
}

// SetIdDTrace is a paid mutator transaction binding the contract method 0xbbf74676.
//
// Solidity: function setIdDTrace(int256 _idA, int256 _idD) returns(int256)
func (_Tls *TlsTransactor) SetIdDTrace(opts *bind.TransactOpts, _idA *big.Int, _idD *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "setIdDTrace", _idA, _idD)
}

func (_Tls *TlsTransactor) AsyncSetIdDTrace(handler func(*types.Receipt, error), opts *bind.TransactOpts, _idA *big.Int, _idD *big.Int) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "setIdDTrace", _idA, _idD)
}

// SetIdDTrace is a paid mutator transaction binding the contract method 0xbbf74676.
//
// Solidity: function setIdDTrace(int256 _idA, int256 _idD) returns(int256)
func (_Tls *TlsSession) SetIdDTrace(_idA *big.Int, _idD *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetIdDTrace(&_Tls.TransactOpts, _idA, _idD)
}

func (_Tls *TlsSession) AsyncSetIdDTrace(handler func(*types.Receipt, error), _idA *big.Int, _idD *big.Int) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetIdDTrace(handler, &_Tls.TransactOpts, _idA, _idD)
}

// SetIdDTrace is a paid mutator transaction binding the contract method 0xbbf74676.
//
// Solidity: function setIdDTrace(int256 _idA, int256 _idD) returns(int256)
func (_Tls *TlsTransactorSession) SetIdDTrace(_idA *big.Int, _idD *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetIdDTrace(&_Tls.TransactOpts, _idA, _idD)
}

func (_Tls *TlsTransactorSession) AsyncSetIdDTrace(handler func(*types.Receipt, error), _idA *big.Int, _idD *big.Int) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetIdDTrace(handler, &_Tls.TransactOpts, _idA, _idD)
}

// SetFactory1 is a paid mutator transaction binding the contract method 0xd6ed6731.
//
// Solidity: function set_factory1(int256 _idA, string batch_pro, string product_name, string composition) returns(int256, int256)
func (_Tls *TlsTransactor) SetFactory1(opts *bind.TransactOpts, _idA *big.Int, batch_pro string, product_name string, composition string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_factory1", _idA, batch_pro, product_name, composition)
}

func (_Tls *TlsTransactor) AsyncSetFactory1(handler func(*types.Receipt, error), opts *bind.TransactOpts, _idA *big.Int, batch_pro string, product_name string, composition string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_factory1", _idA, batch_pro, product_name, composition)
}

// SetFactory1 is a paid mutator transaction binding the contract method 0xd6ed6731.
//
// Solidity: function set_factory1(int256 _idA, string batch_pro, string product_name, string composition) returns(int256, int256)
func (_Tls *TlsSession) SetFactory1(_idA *big.Int, batch_pro string, product_name string, composition string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetFactory1(&_Tls.TransactOpts, _idA, batch_pro, product_name, composition)
}

func (_Tls *TlsSession) AsyncSetFactory1(handler func(*types.Receipt, error), _idA *big.Int, batch_pro string, product_name string, composition string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetFactory1(handler, &_Tls.TransactOpts, _idA, batch_pro, product_name, composition)
}

// SetFactory1 is a paid mutator transaction binding the contract method 0xd6ed6731.
//
// Solidity: function set_factory1(int256 _idA, string batch_pro, string product_name, string composition) returns(int256, int256)
func (_Tls *TlsTransactorSession) SetFactory1(_idA *big.Int, batch_pro string, product_name string, composition string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetFactory1(&_Tls.TransactOpts, _idA, batch_pro, product_name, composition)
}

func (_Tls *TlsTransactorSession) AsyncSetFactory1(handler func(*types.Receipt, error), _idA *big.Int, batch_pro string, product_name string, composition string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetFactory1(handler, &_Tls.TransactOpts, _idA, batch_pro, product_name, composition)
}

// SetFactory2 is a paid mutator transaction binding the contract method 0x03a1af31.
//
// Solidity: function set_factory2(int256 _idA, string checker, string check_time) returns(int256, int256)
func (_Tls *TlsTransactor) SetFactory2(opts *bind.TransactOpts, _idA *big.Int, checker string, check_time string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_factory2", _idA, checker, check_time)
}

func (_Tls *TlsTransactor) AsyncSetFactory2(handler func(*types.Receipt, error), opts *bind.TransactOpts, _idA *big.Int, checker string, check_time string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_factory2", _idA, checker, check_time)
}

// SetFactory2 is a paid mutator transaction binding the contract method 0x03a1af31.
//
// Solidity: function set_factory2(int256 _idA, string checker, string check_time) returns(int256, int256)
func (_Tls *TlsSession) SetFactory2(_idA *big.Int, checker string, check_time string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetFactory2(&_Tls.TransactOpts, _idA, checker, check_time)
}

func (_Tls *TlsSession) AsyncSetFactory2(handler func(*types.Receipt, error), _idA *big.Int, checker string, check_time string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetFactory2(handler, &_Tls.TransactOpts, _idA, checker, check_time)
}

// SetFactory2 is a paid mutator transaction binding the contract method 0x03a1af31.
//
// Solidity: function set_factory2(int256 _idA, string checker, string check_time) returns(int256, int256)
func (_Tls *TlsTransactorSession) SetFactory2(_idA *big.Int, checker string, check_time string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetFactory2(&_Tls.TransactOpts, _idA, checker, check_time)
}

func (_Tls *TlsTransactorSession) AsyncSetFactory2(handler func(*types.Receipt, error), _idA *big.Int, checker string, check_time string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetFactory2(handler, &_Tls.TransactOpts, _idA, checker, check_time)
}

// SetFactory3 is a paid mutator transaction binding the contract method 0xea284bc4.
//
// Solidity: function set_factory3(int256 _idA, string processer, string process_time, string id_factory) returns(int256, int256)
func (_Tls *TlsTransactor) SetFactory3(opts *bind.TransactOpts, _idA *big.Int, processer string, process_time string, id_factory string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_factory3", _idA, processer, process_time, id_factory)
}

func (_Tls *TlsTransactor) AsyncSetFactory3(handler func(*types.Receipt, error), opts *bind.TransactOpts, _idA *big.Int, processer string, process_time string, id_factory string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_factory3", _idA, processer, process_time, id_factory)
}

// SetFactory3 is a paid mutator transaction binding the contract method 0xea284bc4.
//
// Solidity: function set_factory3(int256 _idA, string processer, string process_time, string id_factory) returns(int256, int256)
func (_Tls *TlsSession) SetFactory3(_idA *big.Int, processer string, process_time string, id_factory string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetFactory3(&_Tls.TransactOpts, _idA, processer, process_time, id_factory)
}

func (_Tls *TlsSession) AsyncSetFactory3(handler func(*types.Receipt, error), _idA *big.Int, processer string, process_time string, id_factory string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetFactory3(handler, &_Tls.TransactOpts, _idA, processer, process_time, id_factory)
}

// SetFactory3 is a paid mutator transaction binding the contract method 0xea284bc4.
//
// Solidity: function set_factory3(int256 _idA, string processer, string process_time, string id_factory) returns(int256, int256)
func (_Tls *TlsTransactorSession) SetFactory3(_idA *big.Int, processer string, process_time string, id_factory string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetFactory3(&_Tls.TransactOpts, _idA, processer, process_time, id_factory)
}

func (_Tls *TlsTransactorSession) AsyncSetFactory3(handler func(*types.Receipt, error), _idA *big.Int, processer string, process_time string, id_factory string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetFactory3(handler, &_Tls.TransactOpts, _idA, processer, process_time, id_factory)
}

// SetId is a paid mutator transaction binding the contract method 0x03b4970f.
//
// Solidity: function set_id(string idStr) returns(int256)
func (_Tls *TlsTransactor) SetId(opts *bind.TransactOpts, idStr string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_id", idStr)
}

func (_Tls *TlsTransactor) AsyncSetId(handler func(*types.Receipt, error), opts *bind.TransactOpts, idStr string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_id", idStr)
}

// SetId is a paid mutator transaction binding the contract method 0x03b4970f.
//
// Solidity: function set_id(string idStr) returns(int256)
func (_Tls *TlsSession) SetId(idStr string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetId(&_Tls.TransactOpts, idStr)
}

func (_Tls *TlsSession) AsyncSetId(handler func(*types.Receipt, error), idStr string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetId(handler, &_Tls.TransactOpts, idStr)
}

// SetId is a paid mutator transaction binding the contract method 0x03b4970f.
//
// Solidity: function set_id(string idStr) returns(int256)
func (_Tls *TlsTransactorSession) SetId(idStr string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetId(&_Tls.TransactOpts, idStr)
}

func (_Tls *TlsTransactorSession) AsyncSetId(handler func(*types.Receipt, error), idStr string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetId(handler, &_Tls.TransactOpts, idStr)
}

// SetLogistics is a paid mutator transaction binding the contract method 0xc7b0d405.
//
// Solidity: function set_logistics(int256 _idA, string batch_log, string trans_name, string id_logistics) returns(int256, int256)
func (_Tls *TlsTransactor) SetLogistics(opts *bind.TransactOpts, _idA *big.Int, batch_log string, trans_name string, id_logistics string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_logistics", _idA, batch_log, trans_name, id_logistics)
}

func (_Tls *TlsTransactor) AsyncSetLogistics(handler func(*types.Receipt, error), opts *bind.TransactOpts, _idA *big.Int, batch_log string, trans_name string, id_logistics string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_logistics", _idA, batch_log, trans_name, id_logistics)
}

// SetLogistics is a paid mutator transaction binding the contract method 0xc7b0d405.
//
// Solidity: function set_logistics(int256 _idA, string batch_log, string trans_name, string id_logistics) returns(int256, int256)
func (_Tls *TlsSession) SetLogistics(_idA *big.Int, batch_log string, trans_name string, id_logistics string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetLogistics(&_Tls.TransactOpts, _idA, batch_log, trans_name, id_logistics)
}

func (_Tls *TlsSession) AsyncSetLogistics(handler func(*types.Receipt, error), _idA *big.Int, batch_log string, trans_name string, id_logistics string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetLogistics(handler, &_Tls.TransactOpts, _idA, batch_log, trans_name, id_logistics)
}

// SetLogistics is a paid mutator transaction binding the contract method 0xc7b0d405.
//
// Solidity: function set_logistics(int256 _idA, string batch_log, string trans_name, string id_logistics) returns(int256, int256)
func (_Tls *TlsTransactorSession) SetLogistics(_idA *big.Int, batch_log string, trans_name string, id_logistics string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetLogistics(&_Tls.TransactOpts, _idA, batch_log, trans_name, id_logistics)
}

func (_Tls *TlsTransactorSession) AsyncSetLogistics(handler func(*types.Receipt, error), _idA *big.Int, batch_log string, trans_name string, id_logistics string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetLogistics(handler, &_Tls.TransactOpts, _idA, batch_log, trans_name, id_logistics)
}

// SetPasture is a paid mutator transaction binding the contract method 0xacb03c02.
//
// Solidity: function set_pasture(string batch_raw, int256 weight_raw, string date_raw, string id_pasture) returns(int256, int256)
func (_Tls *TlsTransactor) SetPasture(opts *bind.TransactOpts, batch_raw string, weight_raw *big.Int, date_raw string, id_pasture string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_pasture", batch_raw, weight_raw, date_raw, id_pasture)
}

func (_Tls *TlsTransactor) AsyncSetPasture(handler func(*types.Receipt, error), opts *bind.TransactOpts, batch_raw string, weight_raw *big.Int, date_raw string, id_pasture string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_pasture", batch_raw, weight_raw, date_raw, id_pasture)
}

// SetPasture is a paid mutator transaction binding the contract method 0xacb03c02.
//
// Solidity: function set_pasture(string batch_raw, int256 weight_raw, string date_raw, string id_pasture) returns(int256, int256)
func (_Tls *TlsSession) SetPasture(batch_raw string, weight_raw *big.Int, date_raw string, id_pasture string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetPasture(&_Tls.TransactOpts, batch_raw, weight_raw, date_raw, id_pasture)
}

func (_Tls *TlsSession) AsyncSetPasture(handler func(*types.Receipt, error), batch_raw string, weight_raw *big.Int, date_raw string, id_pasture string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetPasture(handler, &_Tls.TransactOpts, batch_raw, weight_raw, date_raw, id_pasture)
}

// SetPasture is a paid mutator transaction binding the contract method 0xacb03c02.
//
// Solidity: function set_pasture(string batch_raw, int256 weight_raw, string date_raw, string id_pasture) returns(int256, int256)
func (_Tls *TlsTransactorSession) SetPasture(batch_raw string, weight_raw *big.Int, date_raw string, id_pasture string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetPasture(&_Tls.TransactOpts, batch_raw, weight_raw, date_raw, id_pasture)
}

func (_Tls *TlsTransactorSession) AsyncSetPasture(handler func(*types.Receipt, error), batch_raw string, weight_raw *big.Int, date_raw string, id_pasture string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetPasture(handler, &_Tls.TransactOpts, batch_raw, weight_raw, date_raw, id_pasture)
}

// SetSales is a paid mutator transaction binding the contract method 0x98ab2b0c.
//
// Solidity: function set_sales(int256 _idA, string batch_sale, int256 price, string sales_time, string id_sales) returns(int256, int256)
func (_Tls *TlsTransactor) SetSales(opts *bind.TransactOpts, _idA *big.Int, batch_sale string, price *big.Int, sales_time string, id_sales string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_sales", _idA, batch_sale, price, sales_time, id_sales)
}

func (_Tls *TlsTransactor) AsyncSetSales(handler func(*types.Receipt, error), opts *bind.TransactOpts, _idA *big.Int, batch_sale string, price *big.Int, sales_time string, id_sales string) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_sales", _idA, batch_sale, price, sales_time, id_sales)
}

// SetSales is a paid mutator transaction binding the contract method 0x98ab2b0c.
//
// Solidity: function set_sales(int256 _idA, string batch_sale, int256 price, string sales_time, string id_sales) returns(int256, int256)
func (_Tls *TlsSession) SetSales(_idA *big.Int, batch_sale string, price *big.Int, sales_time string, id_sales string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetSales(&_Tls.TransactOpts, _idA, batch_sale, price, sales_time, id_sales)
}

func (_Tls *TlsSession) AsyncSetSales(handler func(*types.Receipt, error), _idA *big.Int, batch_sale string, price *big.Int, sales_time string, id_sales string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetSales(handler, &_Tls.TransactOpts, _idA, batch_sale, price, sales_time, id_sales)
}

// SetSales is a paid mutator transaction binding the contract method 0x98ab2b0c.
//
// Solidity: function set_sales(int256 _idA, string batch_sale, int256 price, string sales_time, string id_sales) returns(int256, int256)
func (_Tls *TlsTransactorSession) SetSales(_idA *big.Int, batch_sale string, price *big.Int, sales_time string, id_sales string) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetSales(&_Tls.TransactOpts, _idA, batch_sale, price, sales_time, id_sales)
}

func (_Tls *TlsTransactorSession) AsyncSetSales(handler func(*types.Receipt, error), _idA *big.Int, batch_sale string, price *big.Int, sales_time string, id_sales string) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetSales(handler, &_Tls.TransactOpts, _idA, batch_sale, price, sales_time, id_sales)
}

// SetTrace is a paid mutator transaction binding the contract method 0xf7ed1921.
//
// Solidity: function set_trace(int256 idA) returns(int256)
func (_Tls *TlsTransactor) SetTrace(opts *bind.TransactOpts, idA *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Tls.contract.Transact(opts, "set_trace", idA)
}

func (_Tls *TlsTransactor) AsyncSetTrace(handler func(*types.Receipt, error), opts *bind.TransactOpts, idA *big.Int) (*types.Transaction, error) {
	return _Tls.contract.AsyncTransact(opts, handler, "set_trace", idA)
}

// SetTrace is a paid mutator transaction binding the contract method 0xf7ed1921.
//
// Solidity: function set_trace(int256 idA) returns(int256)
func (_Tls *TlsSession) SetTrace(idA *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetTrace(&_Tls.TransactOpts, idA)
}

func (_Tls *TlsSession) AsyncSetTrace(handler func(*types.Receipt, error), idA *big.Int) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetTrace(handler, &_Tls.TransactOpts, idA)
}

// SetTrace is a paid mutator transaction binding the contract method 0xf7ed1921.
//
// Solidity: function set_trace(int256 idA) returns(int256)
func (_Tls *TlsTransactorSession) SetTrace(idA *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Tls.Contract.SetTrace(&_Tls.TransactOpts, idA)
}

func (_Tls *TlsTransactorSession) AsyncSetTrace(handler func(*types.Receipt, error), idA *big.Int) (*types.Transaction, error) {
	return _Tls.Contract.AsyncSetTrace(handler, &_Tls.TransactOpts, idA)
}

// TlsCreateResult represents a CreateResult event raised by the Tls contract.
type TlsCreateResult struct {
	Count *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// WatchCreateResult is a free log subscription operation binding the contract event 0xb5636cd912a73dcdb5b570dbe331dfa3e6435c93e029e642def2c8e40dacf210.
//
// Solidity: event CreateResult(int256 count)
func (_Tls *TlsFilterer) WatchCreateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.contract.WatchLogs(fromBlock, handler, "CreateResult")
}

func (_Tls *TlsFilterer) WatchAllCreateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.contract.WatchLogs(fromBlock, handler, "CreateResult")
}

// ParseCreateResult is a log parse operation binding the contract event 0xb5636cd912a73dcdb5b570dbe331dfa3e6435c93e029e642def2c8e40dacf210.
//
// Solidity: event CreateResult(int256 count)
func (_Tls *TlsFilterer) ParseCreateResult(log types.Log) (*TlsCreateResult, error) {
	event := new(TlsCreateResult)
	if err := _Tls.contract.UnpackLog(event, "CreateResult", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchCreateResult is a free log subscription operation binding the contract event 0xb5636cd912a73dcdb5b570dbe331dfa3e6435c93e029e642def2c8e40dacf210.
//
// Solidity: event CreateResult(int256 count)
func (_Tls *TlsSession) WatchCreateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.Contract.WatchCreateResult(fromBlock, handler)
}

func (_Tls *TlsSession) WatchAllCreateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.Contract.WatchAllCreateResult(fromBlock, handler)
}

// ParseCreateResult is a log parse operation binding the contract event 0xb5636cd912a73dcdb5b570dbe331dfa3e6435c93e029e642def2c8e40dacf210.
//
// Solidity: event CreateResult(int256 count)
func (_Tls *TlsSession) ParseCreateResult(log types.Log) (*TlsCreateResult, error) {
	return _Tls.Contract.ParseCreateResult(log)
}

// TlsInsertResult represents a InsertResult event raised by the Tls contract.
type TlsInsertResult struct {
	Count *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// WatchInsertResult is a free log subscription operation binding the contract event 0xc57b01fa77f41df77eaab79a0e2623fab2e7ae3e9530d9b1cab225ad65f2b7ce.
//
// Solidity: event InsertResult(int256 count)
func (_Tls *TlsFilterer) WatchInsertResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.contract.WatchLogs(fromBlock, handler, "InsertResult")
}

func (_Tls *TlsFilterer) WatchAllInsertResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.contract.WatchLogs(fromBlock, handler, "InsertResult")
}

// ParseInsertResult is a log parse operation binding the contract event 0xc57b01fa77f41df77eaab79a0e2623fab2e7ae3e9530d9b1cab225ad65f2b7ce.
//
// Solidity: event InsertResult(int256 count)
func (_Tls *TlsFilterer) ParseInsertResult(log types.Log) (*TlsInsertResult, error) {
	event := new(TlsInsertResult)
	if err := _Tls.contract.UnpackLog(event, "InsertResult", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchInsertResult is a free log subscription operation binding the contract event 0xc57b01fa77f41df77eaab79a0e2623fab2e7ae3e9530d9b1cab225ad65f2b7ce.
//
// Solidity: event InsertResult(int256 count)
func (_Tls *TlsSession) WatchInsertResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.Contract.WatchInsertResult(fromBlock, handler)
}

func (_Tls *TlsSession) WatchAllInsertResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.Contract.WatchAllInsertResult(fromBlock, handler)
}

// ParseInsertResult is a log parse operation binding the contract event 0xc57b01fa77f41df77eaab79a0e2623fab2e7ae3e9530d9b1cab225ad65f2b7ce.
//
// Solidity: event InsertResult(int256 count)
func (_Tls *TlsSession) ParseInsertResult(log types.Log) (*TlsInsertResult, error) {
	return _Tls.Contract.ParseInsertResult(log)
}

// TlsUpdateResult represents a UpdateResult event raised by the Tls contract.
type TlsUpdateResult struct {
	Count *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// WatchUpdateResult is a free log subscription operation binding the contract event 0x8e5890af40fc24a059396aca2f83d6ce41fcef086876548fa4fb8ec27e9d292a.
//
// Solidity: event UpdateResult(int256 count)
func (_Tls *TlsFilterer) WatchUpdateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.contract.WatchLogs(fromBlock, handler, "UpdateResult")
}

func (_Tls *TlsFilterer) WatchAllUpdateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.contract.WatchLogs(fromBlock, handler, "UpdateResult")
}

// ParseUpdateResult is a log parse operation binding the contract event 0x8e5890af40fc24a059396aca2f83d6ce41fcef086876548fa4fb8ec27e9d292a.
//
// Solidity: event UpdateResult(int256 count)
func (_Tls *TlsFilterer) ParseUpdateResult(log types.Log) (*TlsUpdateResult, error) {
	event := new(TlsUpdateResult)
	if err := _Tls.contract.UnpackLog(event, "UpdateResult", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchUpdateResult is a free log subscription operation binding the contract event 0x8e5890af40fc24a059396aca2f83d6ce41fcef086876548fa4fb8ec27e9d292a.
//
// Solidity: event UpdateResult(int256 count)
func (_Tls *TlsSession) WatchUpdateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.Contract.WatchUpdateResult(fromBlock, handler)
}

func (_Tls *TlsSession) WatchAllUpdateResult(fromBlock *uint64, handler func(int, []types.Log)) error {
	return _Tls.Contract.WatchAllUpdateResult(fromBlock, handler)
}

// ParseUpdateResult is a log parse operation binding the contract event 0x8e5890af40fc24a059396aca2f83d6ce41fcef086876548fa4fb8ec27e9d292a.
//
// Solidity: event UpdateResult(int256 count)
func (_Tls *TlsSession) ParseUpdateResult(log types.Log) (*TlsUpdateResult, error) {
	return _Tls.Contract.ParseUpdateResult(log)
}
